spring.application.name=demo

# Database Configuration (MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/tododb?useSSL=true&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=517485049735-64g2p47vm84taioojeq7pl7880lcf0jg.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# JWT Configuration
jwt.secret=hCunJwMQ3+KYIjKFuP9Kw0dihtH6S/iIYPu8F18mjrSmRa/FtiQfQT7mBA8KFK+q96fE8YK97+Nug848IXyLig==
jwt.expiration=86400000

# Server Configuration
server.port=8080

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:4200
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
